This example demonstrates how the proposed technique downscales averaged sea surface temperature (SST) outputs for a sub-region of the Great Barrier Reef (GBR).

1. Data preparation

Coarse resolution GCM averages and observational data should be ready in following formats. 

(i) Structure the observational data into a matrix formatted as N × (To + 2), where 'N' denotes the number of fine-resolution observational locations within the specified region, and 'To' represents the total number of temporal observations in the current period. The initial two columns of this matrix should be allocated for longitude and latitude details, respectively.  Please refer to the "Obs_data.csv" file for an example.

(ii) Store the averaged climate model data in a matrix of dimensions M × (T + 2), where M is the number of coarse grid cells within the region, and T, which is greater than To, represents the total number of time points encompassing both the current and future downscaling periods. The matrix should include two additional columns at the beginning for longitude and latitude information, labeled "lon" and "lat" respectively. The remaining columns should be named after the respective years.  Naming the columns is crucial here as it
enables the R functions to accurately identify the model projections that are relevant to the training period.

2. Downscaling

Downscaling is performed by calling the R function 'Downscaling()', which initially preprocesses GCM data, followed by fitting the joint spatial model for SST processes.

2.1 Pre-processing GCM data

Considering that climate models frequently show systematic deviations from observed data, we apply bias correction to the GCMs averages and interpolate them to match the resolution of observational data. We accomplish this by calling the R function "Stand_downscaling()," which implements the approach described by Van Hooidonk et al. (2015).

2.2 

The 'Downscaling()' function relies on a MATLAB executable to fit the spatial model and, therefore, requires the MATLAB Runtime to operate.

(i) Download and install MATLAB Runtime R2020b (9.9) from https://www.mathworks.com/products/compiler/matlab-runtime.html. MATLAB Runtime is a standalone set of shared libraries that enables the execution of a compiled MATLAB code. Note: The provided MATLAB application was compiled with MATLAB R2020b. Using a different version of MATLAB Runtime may require re-compiling the application to avoid potential errors.

(ii) Download and save all the source files provided in 'src' into your working directory and execute the command chmod +x run BGL.sh in the terminal.

(iii) Call the 'Downscaling()' function with the required inputs to perform the downscaling.
